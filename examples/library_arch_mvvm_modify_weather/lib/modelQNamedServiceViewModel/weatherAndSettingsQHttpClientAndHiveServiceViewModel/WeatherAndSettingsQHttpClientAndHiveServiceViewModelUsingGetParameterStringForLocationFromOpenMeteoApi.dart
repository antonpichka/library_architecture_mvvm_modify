import 'package:flutter/foundation.dart';
import 'package:library_arch_mvvm_modify_weather/model/weather/ListWeather.dart';
import 'package:library_arch_mvvm_modify_weather/model/weather/Weather.dart';
import 'package:library_arch_mvvm_modify_weather/model/weatherAndSettings/ListWeatherAndSettings.dart';
import 'package:library_arch_mvvm_modify_weather/model/weatherAndSettings/WeatherAndSettings.dart';
import 'package:library_arch_mvvm_modify_weather/modelQNamedServiceDataSource/weatherAndSettingsQHiveServiceDataSource/WeatherAndSettingsQHiveServiceDataSourceUsingGetNP.dart';
import 'package:library_arch_mvvm_modify_weather/modelQNamedServiceDataSource/weatherAndSettingsQHiveServiceDataSource/WeatherAndSettingsQHiveServiceDataSourceUsingUpdateParameterWeatherAndSettings.dart';
import 'package:library_arch_mvvm_modify_weather/modelQNamedServiceDataSource/weatherAndSettingsQHttpClientAndHiveServiceDataSource/WeatherAndSettingsQHttpClientAndHiveServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi.dart';
import 'package:library_arch_mvvm_modify_weather/modelQNamedServiceDataSource/weatherQHttpClientServiceDataSource/WeatherQHttpClientServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi.dart';
import 'package:library_arch_mvvm_modify_weather/modelQNamedServiceViewModel/WeatherAndSettingsQNamedServiceViewModel.dart';
import 'package:library_architecture_mvvm_modify/base_model/interface_model_for_named/i_model_for_named_np.dart';
import 'package:library_architecture_mvvm_modify/base_model_q_named_service_view_model/enum_for_i_stream_model_vm.dart';
import 'package:library_architecture_mvvm_modify/utility/base_type_parameter/string_type_parameter.dart';

class WeatherAndSettingsQHttpClientAndHiveServiceViewModelUsingGetParameterStringForLocationFromOpenMeteoApi<T extends WeatherAndSettings,Y extends ListWeatherAndSettings<T>>
    extends WeatherAndSettingsQNamedServiceViewModel<T,Y>
{
  final WeatherAndSettingsQHttpClientAndHiveServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi<T,Y> _dataSource;

  WeatherAndSettingsQHttpClientAndHiveServiceViewModelUsingGetParameterStringForLocationFromOpenMeteoApi(
      super.iCloneStreamModelForSuccess,
      WeatherQHttpClientServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi<Weather,ListWeather<Weather>> weatherQHttpClientServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi,
      WeatherAndSettingsQHiveServiceDataSourceUsingGetNP<T,Y> weatherAndSettingsQHiveServiceDataSourceUsingGetNP,
      WeatherAndSettingsQHiveServiceDataSourceUsingUpdateParameterWeatherAndSettings<T,Y> weatherAndSettingsQHiveServiceDataSourceUsingUpdateParameterWeatherAndSettings,
      IModelForNamedNP<T> iWeatherAndSettingsForDefaultNP)
      : _dataSource = WeatherAndSettingsQHttpClientAndHiveServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi(
      weatherQHttpClientServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi,
      weatherAndSettingsQHiveServiceDataSourceUsingGetNP,
      weatherAndSettingsQHiveServiceDataSourceUsingUpdateParameterWeatherAndSettings,
      iWeatherAndSettingsForDefaultNP),
        super.thereIsDataSource();

  @protected
  @override
  Object get thisClass => this;

  @protected
  @override
  WeatherAndSettingsQHttpClientAndHiveServiceDataSourceUsingGetParameterStringForLocationFromOpenMeteoApi<T,Y>? get getModelQNamedServiceDataSource => _dataSource;

  T? get getWeatherAndSettingsUsingGetParameterStringForLocationFromOpenMeteoApi {
    return getModel(EnumForIStreamModelVM.getParameterNamed);
  }

  Future<T?> getWeatherAndSettingsFromHttpClientAndHiveServiceParameterStringForLocationFromOpenMeteoApiAndSetWeatherAndSettings(StringTypeParameter typeParameter) {
    return getModelFromNamedServiceParameterNamedAndSetModel<StringTypeParameter>(typeParameter);
  }
}